generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model offer {
  id          Int     @id @default(autoincrement())
  title       String? @db.VarChar(255)
  description String? @db.VarChar(255)
  cost        Float?  @db.Float
  status      String? @db.Char(8)
  fk_repair   Int
  repair      repair  @relation(fields: [fk_repair], references: [id], onUpdate: Restrict, map: "offer_ibfk_1")

  @@index([fk_repair], map: "fk_repair")
}

model repair {
  id                                 Int       @id @default(autoincrement())
  title                              String?   @db.VarChar(255)
  registered_at                      DateTime? @db.DateTime(0)
  started_at                         DateTime? @db.DateTime(0)
  finished_at                        DateTime? @db.DateTime(0)
  estimated_time                     DateTime? @db.DateTime(0)
  total_cost                         Float?    @db.Float
  status                             String?   @db.Char(11)
  rating                             Int?
  review                             String?   @db.VarChar(255)
  fk_user_client                     Int
  fk_user_employee                   Int
  offer                              offer[]
  user_repair_fk_user_clientTouser   user      @relation("repair_fk_user_clientTouser", fields: [fk_user_client], references: [id], onUpdate: Restrict, map: "repair_ibfk_1")
  user_repair_fk_user_employeeTouser user      @relation("repair_fk_user_employeeTouser", fields: [fk_user_employee], references: [id], onUpdate: Restrict, map: "repair_ibfk_2")

  @@index([fk_user_client], map: "fk_user_client")
  @@index([fk_user_employee], map: "fk_user_employee")
}

model reservation {
  id            Int       @id @default(autoincrement())
  date          DateTime? @db.Date
  time          DateTime? @db.Time()
  fk_user       Int
  user          user      @relation(fields: [fk_user], references: [id], onUpdate: Restrict, map: "reservation_ibfk_1")

  @@index([fk_user], map: "fk_user")
}

model reservation_hours {
  id           Int  @id @default(autoincrement())
  opening_time DateTime? @db.Time()
  closing_time DateTime? @db.Time()
  interval     Int?
}

model user {
  id                                   Int           @id @default(autoincrement())
  name                                 String?       @db.VarChar(255)
  surname                              String?       @db.VarChar(255)
  email_address                        String?       @db.VarChar(255)
  password                             String?       @db.VarChar(255)
  phone_number                         String?       @db.VarChar(255)
  address                              String?       @db.VarChar(255)
  role                                 String?       @db.Char(13)
  repair_repair_fk_user_clientTouser   repair[]      @relation("repair_fk_user_clientTouser")
  repair_repair_fk_user_employeeTouser repair[]      @relation("repair_fk_user_employeeTouser")
  reservation                          reservation[]
}
